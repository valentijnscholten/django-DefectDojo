name: "Build Docker Images For Testing"

on:
  workflow_dispatch:
    inputs:
        runs-on:
          type: string
          default: '["ubuntu-latest"]'
  workflow_call:
    inputs:
        runs-on:
          type: string
          default: '["ubuntu-latest"]'

jobs:
  build:
    name: Build Docker Images
    runs-on: ${{fromJSON(inputs.runs-on)}}
    strategy:
      matrix:
        docker-image: [django, nginx, integration-tests]
        os: [alpine, debian]
        runs-on: ${{fromJSON(inputs.runs-on)}}
        exclude:
            - docker-image: integration-tests
              os: alpine
            - docker-image: integration-tests
              runs-on: ubuntu-22.04-arm
              os: alpine
            - docker-image: integration-tests
              runs-on: ubuntu-22.04-arm
              os: debian

    steps:
      - name: Show Platform
        run: echo Runs-On value for this run = ${{ fromJSON(inputs.runs-on)[0] }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Read Docker Image Identifiers
        id: read-docker-image-identifiers
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Build
        id: docker_build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        timeout-minutes: 15
        env:
          DOCKER_BUILD_CHECKS_ANNOTATIONS: false
        with:
          context: .
          push: false
          tags: defectdojo/defectdojo-${{ matrix.docker-image }}:${{ matrix.os }},${{ env.REPO_ORG }}/defectdojo-${{ matrix.docker-image }}:${{ matrix.os }}
          file: Dockerfile.${{ matrix.docker-image }}-${{ matrix.os }}
          outputs: type=docker,dest=${{ matrix.docker-image }}-${{ matrix.os }}-${{ fromJSON(inputs.runs-on)[0] }}_img

      # export docker images to be used in next jobs below
      - name: Upload image ${{ matrix.docker-image }} as artifact
        timeout-minutes: 15
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: built-docker-image-${{ matrix.docker-image }}-${{ matrix.os }}-${{ fromJSON(inputs.runs-on)[0] }}
          path: ${{ matrix.docker-image }}-${{ matrix.os }}-${{ fromJSON(inputs.runs-on)[0] }}_img
          retention-days: 1


          #TODO REMOVE comments
      # we won't run the test suite for ARM64, but we do want to see if the images can be built
      # sometimes packages/libraries are not available for ARM64 and won't compile while under Qemu
      # if we ever need to run the tests on ARM64, see https://github.com/orgs/community/discussions/26801 to override runs-on
    #   - name: Build ARM64
    #     id: docker_build_arm64
    #     uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
    #     timeout-minutes: 15
    #     env:
    #         DOCKER_BUILD_CHECKS_ANNOTATIONS: false
    #     with:
    #         context: .
    #         push: false
    #         file: Dockerfile.${{ matrix.docker-image }}-${{ matrix.os }}

